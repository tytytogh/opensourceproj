//diet assistant program

#include <iostream>
#include <windows.h>
#include <string>

using namespace std;

struct person {
	//한 사람의 신체 정보

	//성별
	char gender;
	//나이
	int age;
	//체중과 신장 저장할 변수
	int weight;
	double height;
};

double tdee(person p, int activeMeta_in) {
	//하루 총 에너지 소비량 추정치 계산
	//2020 한국인 영양소 섭취기준의 EER 산출공식에 따름

	//계산 결과 저장 변수
	double result;

	if (activeMeta_in == 1) {
		if (p.gender == 'm' || p.gender == 'M') { //남성일 때
			if (p.age < 20 && p.age > 2) {
				//나이가 3살부터 19살 사이
				result = 88.5 - (61.9 * p.age) + 1.0 * (26.7 * p.weight + 903 * p.height / 100);
			}
			else if (p.age >= 20) {
				//20세 이상
				result = 662 - (9.53 * p.age) + 1.0 * (15.91 * p.weight + 539.6 * p.height / 100);
			}
			else {
				//예외
				return 0;
			}
		}
		else if (p.gender == 'w' || p.gender == 'W') { //여성일 때
			if (p.age < 20 && p.age > 2) {
				result = 135.3 - (30.8 * p.age) + 1.0 * (10.0 * p.weight + 934 * p.height / 100);
			}
			else if (p.age >= 20) {
				result = 354 - (6.91 * p.age) + 1.0 * (9.36 * p.weight + 726 * p.height / 100);
			}
			else {
				//예외
				return 0;
			}
		}
		else {
			//예외
			return 0;
		}
	}
	else if (activeMeta_in == 2) {
		if (p.gender == 'm' || p.gender == 'M') { //남성일 때
			if (p.age < 20 && p.age > 2) {
				result = 88.5 - (61.9 * p.age) + 1.13 * (26.7 * p.weight + 903 * p.height / 100);
			}
			else if (p.age >= 20) {
				result = 662 - (9.53 * p.age) + 1.11 * (15.91 * p.weight + 539.6 * p.height / 100);
			}
			else {
				//예외
				return 0;
			}
		}
		else if (p.gender == 'w' || p.gender == 'W') { //여성일 때
			if (p.age < 20 && p.age > 2) {
				result = 135.3 - (30.8 * p.age) + 1.16 * (10.0 * p.weight + 934 * p.height / 100);
			}
			else if (p.age >= 20) {
				result = 354 - (6.91 * p.age) + 1.12 * (9.36 * p.weight + 726 * p.height / 100);
			}
			else {
				//예외
				return 0;
			}
		}
		else {
			//예외
			return 0;
		}
	}
	else if (activeMeta_in == 3) {
		if (p.gender == 'm' || p.gender == 'M') { //남성일 때
			if (p.age < 20 && p.age > 2) {
				result = 88.5 - (61.9 * p.age) + 1.26 * (26.7 * p.weight + 903 * p.height / 100);
			}
			else if (p.age >= 20) {
				result = 662 - (9.53 * p.age) + 1.25 * (15.91 * p.weight + 539.6 * p.height / 100);
			}
			else {
				//예외
				return 0;
			}
		}
		else if (p.gender == 'w' || p.gender == 'W') { //여성일 때
			if (p.age < 20 && p.age > 2) {
				result = 135.3 - (30.8 * p.age) + 1.31 * (10.0 * p.weight + 934 * p.height / 100);
			}
			else if (p.age >= 20) {
				result = 354 - (6.91 * p.age) + 1.27 * (9.36 * p.weight + 726 * p.height / 100);
			}
			else {
				//예외
				return 0;
			}
		}
		else {
			//예외
			return 0;
		}
	}
	else if (activeMeta_in == 4) {
		if (p.gender == 'm' || p.gender == 'M') { //남성일 때
			if (p.age < 20 && p.age > 2) {
				result = 88.5 - (61.9 * p.age) + 1.42 * (26.7 * p.weight + 903 * p.height / 100);
			}
			else if (p.age >= 20) {
				result = 662 - (9.53 * p.age) + 1.56 * (15.91 * p.weight + 539.6 * p.height / 100);
			}
			else {
				//예외
				return 0;
			}
		}
		else if (p.gender == 'w' || p.gender == 'W') { //여성일 때
			if (p.age < 20 && p.age > 2) {
				result = 135.3 - (30.8 * p.age) + 1.48 * (10.0 * p.weight + 934 * p.height / 100);
			}
			else if (p.age >= 20) {
				result = 354 - (6.91 * p.age) + 1.45 * (9.36 * p.weight + 726 * p.height / 100);
			}
			else {
				//예외
				return 0;
			}
		}
		else {
			//예외
			return 0;
		}
	}
	else {
		//activeMeta_in 예외 처리
		return 0;
	}
	return result;
}

double RecoCal() {
	person p;

	//만약 choice_in과 fomula_choice에 예시와 다른 값이 들어왔을 때 while문 내부가 다시 동작하도록 함.
	bool flag = true;

	//하루 칼로리 권장량 측정 또는 측정 결과 입력

	//권장량을 계산할지, 결과만 입력할지 선택할 변수
	int choice_in;
	//기초대사량 저장할 변수
	double bmr;
	//칼로리 계산기 결과 저장할 변수
	double Calcalculator;
	//활동 대사량 입력받을 변수
	int activeMeta_in;
	
	while (flag) {
		//flag 변수가 예외때문에 continue로 가지 않고, 예외가 없이 잘 입력됐을 때 탈출

		cout << "하루 권장 칼로리 섭취량(kcal/day)을 계산하시려면 1, 측정 결과를 입력하시려면 2를 입력해주세요" << endl;
		cout << " ▷ 뒤로가기(숫자 0 입력)" << endl;
		cin >> choice_in;

		if (choice_in == 1) {

			cout << " > 기본 정보 입력 < " << endl;
			cout << "성별(남성은 m, 여성은 w) 입력 ▷ ";
			cin >> p.gender;
			cout << "나이(세) 입력 ▷ ";
			cin >> p.age;
			cout << "체중(kg) 입력 ▷ ";
			cin >> p.weight;
			cout << "신장(cm) 입력 ▷ ";
			cin >> p.height;
			cout << endl;
			cout << "다음은 활동 대사량을 계산하기 위한 정보 입력입니다" << endl;
			cout << "다음 신체활동단계 중 해당하는 번호를 하나 입력해주세요" << endl;
			cout << "비활동적이면 1" << endl;
			cout << "저활동적이면 2" << endl;
			cout << "활동적이면 3" << endl;
			cout << "매우 활동적이면 4를 입력해주세요" << endl;
			cout << "입력 ▷ " << endl;
			cin >> activeMeta_in;
			cout << endl;
			
			Calcalculator = tdee(p, activeMeta_in);
			
			if (Calcalculator == 0) {
				//기본 정보 입력값에 대한 예외처리
				system("cls");
				cout << "                     ***기본 정보 입력 오류***" << endl;
				cout << "(반드시 성별은 m과 w 중에 하나, 기본 정보는 모두 양수를 입력해주세요)" << endl;
				continue;
			}
		}
		else if (choice_in == 2) {
			cout << "직접 측정하신 총에너지소비량을 입력해주세요 ▷ ";
			cin >> Calcalculator;
		}
		else if (choice_in == 0) {
			//뒤로 가기
			system("cls");
		}
		else {
			//choice_in에 대한 예외처리
			system("cls");
			cout << "           ***입력 오류***" << endl;
			cout << "(반드시 1과 2 중에 하나를 입력해주세요)" << endl;
			continue;
		}
		flag = false;
	}
	system("cls");
	cout << "당신의 하루 총 칼로리 필요량 추정치는 " << Calcalculator << "kcal입니다" << endl;
	cout << "메뉴로 돌아갑니다" << endl;
	return Calcalculator;
}


void Dietplan() {  //식단 짜는 함수 
	//하루 평균 칼로리와 입력된 일 수 평균 칼로리(일 수가 일주일 이상이면 일주일의 평균, 한달 이상이면 한달 평균 칼로리가 추가로 제공됨)가 결과로 출력됨
	//직접 입력에서는 음식이름에 글자수 제한을 둠
	cout << "" << endl;
	cout << "                                      식단 짜기" << endl;
	cout << "                     먼저 식단을 짜고 싶으신 일 수를 입력해주세요" << endl;
	cout << "그리고 식단에 음식을 추가하는 방법(1.직접 입력과 2.저장된 음식 칼로리 중에서)을 선택해주세요" << endl;
	cout << "              짜신 식단은 하루 아침 점심 저녁 별로 일마다 따로따로 출력됩니다" << endl << endl;

	//식단을 짤 일 수
	int days;
	//뒤로가기 구현위한 변수

	cout << " ▷ 식단을 짜려고 하는 일 수" << endl;
	cout << " ▷ 뒤로가기(숫자 0 입력)" << endl;
	cin >> days;

	if (days >= 7 && days < 30) {

	}
	else if (days >= 30) {

	}
	else if (days >= 1 && days < 7) {

	}
	else if (days == 0) {
		//뒤로 가기
		system("cls");
	}
	//예외처리
}

void menu(void) {  
	//메뉴 여러 가지 중에 선택할 수 있도록 함. 키보드로 입력받음

	//계산된(또는 입력된) 하루 권장 칼로리 섭취량
	double Calcalculator;
	//메뉴 입력
	int input = 0;
	//메뉴 함수 종료 후 프로그램 종료하기 위한 변수
	bool CorE = true;

	//메뉴는 계속 돌면서 사용자가 그만하기를 원한다면, 종료됨
	while (CorE) {
		//선택할 메뉴 출력
		cout << endl;
		cout << "▶ 메뉴 " << endl << endl;
		cout << "   1. 연령별 하루 권장 칼로리 섭취량 " << endl;
		cout << "   2. 식단 짜기" << endl;
		cout << "   3. 식단, 먹은 음식에 따른 운동 강도나 종류 추천" << endl;
		cout << "   4. 먹은 음식 칼로리 계산" << endl;
		cout << "   5. 짠 식단 확인" << endl;
		cout << "   6. 프로그램 종료" << endl;
		cout << endl;

		//기능 선택
		//기능 선택 후, 뒤로 가기 입력을 하나 생성***
		cout << "원하시는 번호를 입력해 주세요 ▷ ";
		cin >> input;

		system("cls");

		switch (input) {
		case 1:
			Calcalculator = RecoCal();
			break;
		case 2:
			Dietplan();
			break;
		case 3:
			//_3();
			break;
		case 4:
			//_4();
			break;
		case 5:
			//_5();
			break;
		case 6:
			CorE = false;
			break;
		default:  //잘못된 입력-->다시 입력하도록 함.
			cout << "메뉴에 없는 숫자(문자)입니다 다시 입력해 주세요." << endl;
			break;
		}
	}
}


int main(void) {

	//start 입력에 따라 x, y 이외의 문자가 들어오면, 다시 입력하도록 하기 위한 변수
	bool flag = true;

	//프로그램 실행을 위한 입력 문자 저장
	char start = ' ';

	cout << "         안녕하세요 다이어트 어시스턴트 프로그램입니다" << endl << endl;
	cout << "칼로리 계산부터 운동별 소모 칼로리까지 다양한 정보를 전해드립니다" << endl << endl;
	cout << "     실행하시겠다면 y(Y), 종료하시겠다면 x(X)를 입력해주세요 : ";

	while (flag) {
		cin >> start;
		//프로그램 시작 결정 및 예외 처리
		if (start == 'x' || start == 'X') {
			return 0;
		}
		else if (start == 'y' || start == 'Y') {
			flag = false;
		}
		else {
			cout << "y 또는 x 중에서 입력해주세요.(대문자 가능)" << endl;
		}
	}
	system("cls");

	menu();

	return 0;
}